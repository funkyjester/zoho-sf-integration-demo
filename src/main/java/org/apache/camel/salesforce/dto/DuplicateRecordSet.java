/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin.
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;

import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.Attributes;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject DuplicateRecordSet
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("DuplicateRecordSet")
public class DuplicateRecordSet extends AbstractDescribedSObjectBase {

    public DuplicateRecordSet() {
        getAttributes().setType("DuplicateRecordSet");
    }

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    private String DuplicateRuleId;

    @JsonProperty("DuplicateRuleId")
    public String getDuplicateRuleId() {
        return this.DuplicateRuleId;
    }

    @JsonProperty("DuplicateRuleId")
    public void setDuplicateRuleId(String DuplicateRuleId) {
        this.DuplicateRuleId = DuplicateRuleId;
    }

    private Integer RecordCount;

    @JsonProperty("RecordCount")
    public Integer getRecordCount() {
        return this.RecordCount;
    }

    @JsonProperty("RecordCount")
    public void setRecordCount(Integer RecordCount) {
        this.RecordCount = RecordCount;
    }

     private QueryRecordsDuplicateRecordItem DuplicateRecordItems;

    @JsonProperty("DuplicateRecordItems")
    public QueryRecordsDuplicateRecordItem getDuplicateRecordItems() {
        return DuplicateRecordItems;
    }

    @JsonProperty("DuplicateRecordItems")
    public void setDuplicateRecordItems(QueryRecordsDuplicateRecordItem DuplicateRecordItems) {
        this.DuplicateRecordItems = DuplicateRecordItems;
    }

    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Duplicate Record Set ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("IsDeleted", "Deleted", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("Name", "Duplicate Record Set Name", "string", "xsd:string", 255, false, false, true, false, false, false, true);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("LastViewedDate", "Last Viewed Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("LastReferencedDate", "Last Referenced Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("DuplicateRuleId", "Duplicate Rule ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("RecordCount", "Record Count", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField12);

        description.setLabel("Duplicate Record Set");
        description.setLabelPlural("Duplicate Record Sets");
        description.setName("DuplicateRecordSet");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setApprovalLayouts("/services/data/v34.0/sobjects/DuplicateRecordSet/describe/approvalLayouts");
        sObjectDescriptionUrls1.setCompactLayouts("/services/data/v34.0/sobjects/DuplicateRecordSet/describe/compactLayouts");
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/DuplicateRecordSet/describe");
        sObjectDescriptionUrls1.setLayouts("/services/data/v34.0/sobjects/DuplicateRecordSet/describe/layouts");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/DuplicateRecordSet/{ID}");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/DuplicateRecordSet");
        sObjectDescriptionUrls1.setUiDetailTemplate("https://gabrielchanca-dev-ed.my.salesforce.com/{ID}");
        sObjectDescriptionUrls1.setUiEditTemplate("https://gabrielchanca-dev-ed.my.salesforce.com/{ID}/e");
        sObjectDescriptionUrls1.setUiNewRecord("https://gabrielchanca-dev-ed.my.salesforce.com/0GK/e");
        description.setUrls(sObjectDescriptionUrls1);

        return description;
    }
}

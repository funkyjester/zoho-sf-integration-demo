/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin.
 */
package org.apache.camel.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;

import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.Attributes;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject PricebookEntry
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("PricebookEntry")
public class PricebookEntry extends AbstractDescribedSObjectBase {

    public PricebookEntry() {
        getAttributes().setType("PricebookEntry");
    }

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    private String Pricebook2Id;

    @JsonProperty("Pricebook2Id")
    public String getPricebook2Id() {
        return this.Pricebook2Id;
    }

    @JsonProperty("Pricebook2Id")
    public void setPricebook2Id(String Pricebook2Id) {
        this.Pricebook2Id = Pricebook2Id;
    }

    private String Product2Id;

    @JsonProperty("Product2Id")
    public String getProduct2Id() {
        return this.Product2Id;
    }

    @JsonProperty("Product2Id")
    public void setProduct2Id(String Product2Id) {
        this.Product2Id = Product2Id;
    }

    private Double UnitPrice;

    @JsonProperty("UnitPrice")
    public Double getUnitPrice() {
        return this.UnitPrice;
    }

    @JsonProperty("UnitPrice")
    public void setUnitPrice(Double UnitPrice) {
        this.UnitPrice = UnitPrice;
    }

    private Boolean IsActive;

    @JsonProperty("IsActive")
    public Boolean getIsActive() {
        return this.IsActive;
    }

    @JsonProperty("IsActive")
    public void setIsActive(Boolean IsActive) {
        this.IsActive = IsActive;
    }

    private Boolean UseStandardPrice;

    @JsonProperty("UseStandardPrice")
    public Boolean getUseStandardPrice() {
        return this.UseStandardPrice;
    }

    @JsonProperty("UseStandardPrice")
    public void setUseStandardPrice(Boolean UseStandardPrice) {
        this.UseStandardPrice = UseStandardPrice;
    }

    private String ProductCode;

    @JsonProperty("ProductCode")
    public String getProductCode() {
        return this.ProductCode;
    }

    @JsonProperty("ProductCode")
    public void setProductCode(String ProductCode) {
        this.ProductCode = ProductCode;
    }

     private QueryRecordsOpportunityLineItem OpportunityLineItems;

    @JsonProperty("OpportunityLineItems")
    public QueryRecordsOpportunityLineItem getOpportunityLineItems() {
        return OpportunityLineItems;
    }

    @JsonProperty("OpportunityLineItems")
    public void setOpportunityLineItems(QueryRecordsOpportunityLineItem OpportunityLineItems) {
        this.OpportunityLineItems = OpportunityLineItems;
    }
    private QueryRecordsOrderItem OrderItems;

    @JsonProperty("OrderItems")
    public QueryRecordsOrderItem getOrderItems() {
        return OrderItems;
    }

    @JsonProperty("OrderItems")
    public void setOrderItems(QueryRecordsOrderItem OrderItems) {
        this.OrderItems = OrderItems;
    }

    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Price Book Entry ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("Name", "Product Name", "string", "xsd:string", 255, false, true, true, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("Pricebook2Id", "Price Book ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("Product2Id", "Product ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("UnitPrice", "List Price", "currency", "xsd:double", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("IsActive", "Active", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("UseStandardPrice", "Use Standard Price", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("ProductCode", "Product Code", "string", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("IsDeleted", "Deleted", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField14);

        description.setLabel("Price Book Entry");
        description.setLabelPlural("Price Book Entries");
        description.setName("PricebookEntry");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setCompactLayouts("/services/data/v34.0/sobjects/PricebookEntry/describe/compactLayouts");
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/PricebookEntry/describe");
        sObjectDescriptionUrls1.setLayouts("/services/data/v34.0/sobjects/PricebookEntry/describe/layouts");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/PricebookEntry/{ID}");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/PricebookEntry");
        sObjectDescriptionUrls1.setUiDetailTemplate("https://gabrielchanca-dev-ed.my.salesforce.com/{ID}");
        sObjectDescriptionUrls1.setUiEditTemplate("https://gabrielchanca-dev-ed.my.salesforce.com/{ID}/e");
        sObjectDescriptionUrls1.setUiNewRecord("https://gabrielchanca-dev-ed.my.salesforce.com/01u/e");
        description.setUrls(sObjectDescriptionUrls1);

        return description;
    }
}
